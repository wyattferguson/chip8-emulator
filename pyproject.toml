
[project]
name = "chip8-emulator"
version = "0.2.5"
description = "The Chip8 is a very simple system, originally created as an interpretter for an 8 bit CPU in the 1970s."
license = {text = "MIT License"}
keywords = ["chip8", "emulator", "vintage cpu", "cpu", "python"]
readme = "README.md"
authors = [
    { name = "wyattferguson", email = "wyattxdev@duck.com" }
]
requires-python = ">=3.12"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT License"
]
dependencies = [
    "click>=8.1.8",
    "pygame>=2.6.1",
]

[dependency-groups]
dev = [
    "ty>=0.0.1a6",
    "pytest>=8.3.4",
    "ruff>=0.9.7",
    "taskipy>=1.14.1",
]

[project.urls]
homepage = "https://github.com/wyattferguson/chip8-emulator"
repository = "https://github.com/wyattferguson/chip8-emulator.git"
documentation = "https://github.com/wyattferguson/chip8-emulator"
issues = "https://github.com/wyattferguson/chip8-emulator/issues"

[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "chip8"
module-root = ""

[project.scripts]
chip8 = "chip8.__main__:run"

[tool.taskipy.tasks]
format = "ruff format ./src/"
lint = "ruff check --fix ./src/"
tests = "pytest --verbose --color=yes tests"
typecheck = "ty check"
run = "chip8"

[tool.ruff]
line-length = 100
fix = true
indent-width = 4
format.indent-style = "space"
target-version = "py312"
include = ["*.py"]
src = ["chip8", "tests"]

[tool.ruff.lint]
pydocstyle.convention = "google"
fixable = ["ALL"]
select = [
    "F", # Pyflakes rules
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "N", # PEP8 Naming
    "W", # PyCodeStyle warnings
    "E", # PyCodeStyle errors
    "I", # Sort imports properly
    "Q", # flake8-quotes
    "PT", #flake8-pytest-style
    "UP", # Warn if certain things can changed due to newer Python versions
    "C4", # Catch incorrect use of comprehensions, dict, list, etc
    "ISC", # Good use of string concatenation
    "RET", # Good return practices
    "PERF", # Perflint: performance
    "SIM", # Common simplification rules
    "TID", # Some good import practices
    "RUF", #Ruff-specific rules
    "DJ", # Django rules
    "FAST" # FastAPI rules
  ]

ignore=[
    "D105",
    "D107",
    "D203",
    "D212",
    "UP006",
    "UP007",
    "D400",
    "D406",
    "D407",
    "PLC1901",
    "UP035"
  ]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "D", # Disable docstring check for test files
    "F841", # Disable unused variable check for test files
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "PLR2004", # Magic value used in comparison, ...
]

[tool.ty]
src.root = "./chip8"
environment.python = "./.venv"
terminal.output-format = "concise"